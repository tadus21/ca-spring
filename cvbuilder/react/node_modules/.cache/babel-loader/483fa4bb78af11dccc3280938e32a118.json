{"ast":null,"code":"import _objectSpread from \"/Users/tadaso/Workspace/projects/ca/ca-spring/cvbuilder/academy-java-react-group/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/tadaso/Workspace/projects/ca/ca-spring/cvbuilder/academy-java-react-group/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tadaso/Workspace/projects/ca/ca-spring/cvbuilder/academy-java-react-group/src/app/components/Contacts/index.js\";\nimport React, { useState } from 'react';\nimport './index.css';\nimport { useFetch } from \"../../utils/fetch-hook\";\nimport { API_ENDPOINTS } from \"../../utils/constants\";\nimport { FaEnvelope, FaGithubAlt, FaLinkedinIn, FaMapMarker, FaPhone } from 'react-icons/fa';\nconst icons = {\n  FaEnvelope,\n  FaPhone,\n  FaMapMarker,\n  FaLinkedinIn,\n  FaGithubAlt\n};\n\nfunction Item(data) {\n  const Icon = icons[data.type];\n  return React.createElement(\"a\", {\n    className: \"Contacts--item\",\n    href: data.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    className: \"Contacts--item-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"Contacts--item-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, data.value));\n}\n\nfunction Contacts(props) {\n  const _useState = useState([]),\n        contacts = _useState.contacts,\n        setContacts = _useState.setContacts;\n\n  const _useFetch = useFetch(API_ENDPOINTS.contacts),\n        loading = _useFetch.loading,\n        data = _useFetch.data;\n\n  setContacts(data);\n\n  const addContact = contact => {\n    setContacts([...contacts, contact]);\n  };\n\n  return React.createElement(\"section\", {\n    className: \"Contacts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Contacts\"), loading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Loading...\") : contacts.map(Item), React.createElement(AddContactForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n}\n\nconst AddContactForm = props => {\n  const initialFormState = {\n    value: '',\n    type: '',\n    url: ''\n  };\n\n  const _useState2 = useState(initialFormState),\n        _useState3 = _slicedToArray(_useState2, 2),\n        contact = _useState3[0],\n        setContact = _useState3[1];\n\n  const handleInputChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setContact(_objectSpread({}, contact, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      if (!contact.value || !contact.type || !contact.url) return;\n      props.addContact(contact);\n      setContact(initialFormState);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Value\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"value\",\n    value: contact.value,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Type\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"type\",\n    value: contact.type,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Url\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"url\",\n    value: contact.url,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Add new contact\"));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/tadaso/Workspace/projects/ca/ca-spring/cvbuilder/academy-java-react-group/src/app/components/Contacts/index.js"],"names":["React","useState","useFetch","API_ENDPOINTS","FaEnvelope","FaGithubAlt","FaLinkedinIn","FaMapMarker","FaPhone","icons","Item","data","Icon","type","url","value","Contacts","props","contacts","setContacts","loading","addContact","contact","map","AddContactForm","initialFormState","setContact","handleInputChange","event","target","name","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './index.css';\nimport {useFetch} from \"../../utils/fetch-hook\";\nimport {API_ENDPOINTS} from \"../../utils/constants\";\nimport {FaEnvelope, FaGithubAlt, FaLinkedinIn, FaMapMarker, FaPhone} from 'react-icons/fa';\n\nconst icons = {FaEnvelope, FaPhone, FaMapMarker, FaLinkedinIn, FaGithubAlt};\n\nfunction Item(data) {\n  const Icon = icons[data.type];\n\n  return (\n    <a className=\"Contacts--item\" href={data.url}>\n      <Icon className=\"Contacts--item-icon\"/>\n      <span className=\"Contacts--item-text\">{data.value}</span>\n    </a>\n  );\n}\n\nfunction Contacts(props) {\n\n  const {contacts, setContacts} = useState([]);\n  const {loading, data} = useFetch(API_ENDPOINTS.contacts);\n  setContacts(data);\n\n  const addContact = contact => {\n    setContacts([...contacts, contact])\n  };\n\n  return (\n    <section className=\"Contacts\">\n      <h3>Contacts</h3>\n      {loading ?\n        <div>Loading...</div>\n        :\n        contacts.map(Item)\n\n      }\n      <AddContactForm/>\n    </section>\n  );\n}\n\nconst AddContactForm = props => {\n  const initialFormState = {value: '', type: '', url: ''};\n  const [contact, setContact] = useState(initialFormState);\n\n  const handleInputChange = event => {\n    const {name, value} = event.target;\n\n    setContact({...contact, [name]: value})\n  };\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault();\n        if (!contact.value || !contact.type || !contact.url) return;\n        props.addContact(contact);\n        setContact(initialFormState)\n      }}\n    >\n      <label>Value</label>\n      <input type=\"text\" name=\"value\" value={contact.value} onChange={handleInputChange}/>\n      <label>Type</label>\n      <input type=\"text\" name=\"type\" value={contact.type} onChange={handleInputChange}/>\n      <label>Url</label>\n      <input type=\"text\" name=\"url\" value={contact.url} onChange={handleInputChange}/>\n      <button>Add new contact</button>\n    </form>\n  )\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}